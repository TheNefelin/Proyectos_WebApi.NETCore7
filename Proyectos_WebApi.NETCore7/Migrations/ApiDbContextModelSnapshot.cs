// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyectos_WebApi.NETCore8.Connection;

#nullable disable

namespace Proyectos_WebApi.NETCore7.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BibliotecaAuth.Models.AuthPerfilModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("AuthPerfil");
                });

            modelBuilder.Entity("BibliotecaAuth.Models.AuthUsuarioModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("VARCHAR(450)");

                    b.Property<string>("AuthHash")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("AuthSalt")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("IdPerfil")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdPerfil");

                    b.ToTable("AuthUsuario");
                });

            modelBuilder.Entity("BibliotecaF1.Models.F1CarreraModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clima")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCircuito")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCircuito");

                    b.ToTable("F1Carreras");
                });

            modelBuilder.Entity("BibliotecaF1.Models.F1CircuitoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.HasKey("Id");

                    b.ToTable("F1Circuitos");
                });

            modelBuilder.Entity("BibliotecaF1.Models.F1EscuderiaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("UrlAuto")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("F1Escuderias");
                });

            modelBuilder.Entity("BibliotecaF1.Models.F1PaisModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("UrlBandera")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("F1Paises");
                });

            modelBuilder.Entity("BibliotecaF1.Models.F1PilotoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Dorsal")
                        .HasColumnType("int");

                    b.Property<bool>("EstaVivo")
                        .HasColumnType("bit");

                    b.Property<float>("Estatura")
                        .HasColumnType("real");

                    b.Property<DateTime>("FechaNaci")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEscuderia")
                        .HasColumnType("int");

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<int>("Puntos")
                        .HasColumnType("int");

                    b.Property<string>("UrlPerfil")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdEscuderia");

                    b.ToTable("F1Pilotos");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJAventuraImgModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Id_Aventura")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Aventura");

                    b.ToTable("GJAventurasImg");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJAventuraModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(800)");

                    b.Property<int>("Id_Guia")
                        .HasColumnType("int");

                    b.Property<bool>("Importante")
                        .HasColumnType("bit");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Guia");

                    b.ToTable("GJAventuras");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJAventuraUsuarioModel", b =>
                {
                    b.Property<int>("Id_Aventura")
                        .HasColumnType("int");

                    b.Property<string>("Id_Usuario")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("Id_Aventura", "Id_Usuario");

                    b.ToTable("GJAventurasUsuario");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJFondoImgModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Id_Juego")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Juego");

                    b.ToTable("GJFondosImg");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJFuenteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Id_Juego")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Juego");

                    b.ToTable("GJFuentes");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJGuiaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Id_Juego")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Juego");

                    b.ToTable("GJGuias");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJGuiaUsuarioModel", b =>
                {
                    b.Property<int>("Id_Guia")
                        .HasColumnType("int");

                    b.Property<string>("Id_Usuario")
                        .HasColumnType("VARCHAR(256)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("Id_Guia", "Id_Usuario");

                    b.ToTable("GJGuiasUsuario");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJJuegoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("GJJuegos");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJPersonajeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<int>("Id_Juego")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Juego");

                    b.ToTable("GJPersonajes");
                });

            modelBuilder.Entity("BibliotecaAuth.Models.AuthUsuarioModel", b =>
                {
                    b.HasOne("BibliotecaAuth.Models.AuthPerfilModel", "AuthPerfil")
                        .WithMany("AuthUsuarios")
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AuthPerfil");
                });

            modelBuilder.Entity("BibliotecaF1.Models.F1CarreraModel", b =>
                {
                    b.HasOne("BibliotecaF1.Models.F1CircuitoModel", "F1Circuito")
                        .WithMany("F1Carreras")
                        .HasForeignKey("IdCircuito")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("F1Circuito");
                });

            modelBuilder.Entity("BibliotecaF1.Models.F1PilotoModel", b =>
                {
                    b.HasOne("BibliotecaF1.Models.F1EscuderiaModel", "F1Escuderia")
                        .WithMany("F1Piloto")
                        .HasForeignKey("IdEscuderia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("F1Escuderia");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJAventuraImgModel", b =>
                {
                    b.HasOne("BibliotecaGuiaJuegos.Models.GJAventuraModel", "GJAventura")
                        .WithMany("GJAventuraImg")
                        .HasForeignKey("Id_Aventura")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GJAventura");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJAventuraModel", b =>
                {
                    b.HasOne("BibliotecaGuiaJuegos.Models.GJGuiaModel", "GJGuia")
                        .WithMany("GJAventura")
                        .HasForeignKey("Id_Guia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GJGuia");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJAventuraUsuarioModel", b =>
                {
                    b.HasOne("BibliotecaGuiaJuegos.Models.GJAventuraModel", "GJAventura")
                        .WithMany("GJAventuraUsuario")
                        .HasForeignKey("Id_Aventura")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GJAventura");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJFondoImgModel", b =>
                {
                    b.HasOne("BibliotecaGuiaJuegos.Models.GJJuegoModel", "GJJuego")
                        .WithMany("GJFondosImg")
                        .HasForeignKey("Id_Juego")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GJJuego");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJFuenteModel", b =>
                {
                    b.HasOne("BibliotecaGuiaJuegos.Models.GJJuegoModel", "GJJuego")
                        .WithMany("GJFuentes")
                        .HasForeignKey("Id_Juego")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GJJuego");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJGuiaModel", b =>
                {
                    b.HasOne("BibliotecaGuiaJuegos.Models.GJJuegoModel", "GJJuego")
                        .WithMany("GJGuias")
                        .HasForeignKey("Id_Juego")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GJJuego");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJGuiaUsuarioModel", b =>
                {
                    b.HasOne("BibliotecaGuiaJuegos.Models.GJGuiaModel", "GJGuia")
                        .WithMany("GJGuiaUsuario")
                        .HasForeignKey("Id_Guia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GJGuia");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJPersonajeModel", b =>
                {
                    b.HasOne("BibliotecaGuiaJuegos.Models.GJJuegoModel", "GJJuego")
                        .WithMany("GJPersonajes")
                        .HasForeignKey("Id_Juego")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GJJuego");
                });

            modelBuilder.Entity("BibliotecaAuth.Models.AuthPerfilModel", b =>
                {
                    b.Navigation("AuthUsuarios");
                });

            modelBuilder.Entity("BibliotecaF1.Models.F1CircuitoModel", b =>
                {
                    b.Navigation("F1Carreras");
                });

            modelBuilder.Entity("BibliotecaF1.Models.F1EscuderiaModel", b =>
                {
                    b.Navigation("F1Piloto");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJAventuraModel", b =>
                {
                    b.Navigation("GJAventuraImg");

                    b.Navigation("GJAventuraUsuario");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJGuiaModel", b =>
                {
                    b.Navigation("GJAventura");

                    b.Navigation("GJGuiaUsuario");
                });

            modelBuilder.Entity("BibliotecaGuiaJuegos.Models.GJJuegoModel", b =>
                {
                    b.Navigation("GJFondosImg");

                    b.Navigation("GJFuentes");

                    b.Navigation("GJGuias");

                    b.Navigation("GJPersonajes");
                });
#pragma warning restore 612, 618
        }
    }
}
